/*
 * This class contain necessary database operation e.g: update data, remove data etc... needed in application
 */

package com.csform.android.uiapptemplate;

import com.csform.android.uiapptemplate.TableData.TableInfo;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

public class DatabaseOperations extends SQLiteOpenHelper {

	public static final int database_version = 1;
	public String CREATE_QUERY = "CREATE TABLE " 
			+ TableInfo.TABLE_NAME + "("
			+ TableInfo.ID + " TEXT PRIMARY KEY," 
			+ TableInfo.IDENTIFIER + " TEXT,"
			+ TableInfo.TITLE+" TEXT ,"
			+ TableInfo.DESCRIPTION+" TEXT ,"
			+ TableInfo.TYPE_NAME+" TEXT ,"
			+ TableInfo.ADDRESS+" TEXT ,"
			+ TableInfo.LAT+" TEXT ,"
			+ TableInfo.LNG+" TEXT ,"
			+ TableInfo.IMAGE0+" TEXT ,"
			+ TableInfo.IMAGE1+" TEXT ,"
			+ TableInfo.IMAGE2+" TEXT ,"
			+ TableInfo.USER_LOGIN+" TEXT ,"
			+ TableInfo.DATE_OCCURED+" TEXT );";

	public DatabaseOperations(Context context) {
		super(context, TableInfo.DATABASE_NAME, null, database_version);
		Log.d("database operation","database created");
		// TODO Auto-generated constructor stub
	}

	@Override
	public void onCreate(SQLiteDatabase sdb) {
		// TODO Auto-generated method stub
		sdb.execSQL(CREATE_QUERY);
		Log.d("database operation","table created");
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// TODO Auto-generated method stub

	}
	
	public long putInformation(DatabaseOperations dop,String id,String identifier,String title,String description,String type_name,String address,String lat,String lng,String image0,String image1,String image2,String user_login,String date_occured)
	{
		try
		{
		SQLiteDatabase SQ=dop.getWritableDatabase();
		ContentValues cv=new ContentValues();
		cv.put(TableInfo.ID, id);
		cv.put(TableInfo.IDENTIFIER, identifier);
		cv.put(TableInfo.TITLE, title);
		cv.put(TableInfo.DESCRIPTION,description);
		cv.put(TableInfo.TYPE_NAME, type_name);
		cv.put(TableInfo.ADDRESS, address);
		cv.put(TableInfo.LAT, lat);
		cv.put(TableInfo.LNG, lng);
		cv.put(TableInfo.IMAGE0, image0);
		cv.put(TableInfo.IMAGE1, image1);
		cv.put(TableInfo.IMAGE2, image2);
		cv.put(TableInfo.USER_LOGIN, user_login);
		cv.put(TableInfo.DATE_OCCURED, date_occured);
		long k=SQ.insert(TableInfo.TABLE_NAME, null, cv);
		Log.d("database operation","one row inserted");
		return k;
		}
		catch(Exception ex)
		{
			return -1;
		}
	}
	
	public Cursor getInformation(DatabaseOperations dop,String bottom,String top,String left,String right)
	{
		
		SQLiteDatabase SQ=dop.getReadableDatabase();
		String selectQuery = "select * from "+TableInfo.TABLE_NAME+" where cast("+TableInfo.LAT+" as REAL)> cast("+bottom+" as REAL) and cast("+TableInfo.LAT+" as REAL)> cast("+top+" as REAL and cast("+TableInfo.LNG+" as REAL)> cast("+left+" as REAL and cast("+TableInfo.LAT+" as REAL)> cast("+right+" as REAL)))";
		Cursor c = SQ.rawQuery(selectQuery,null);
		return c;
		
		
	}
	
	
	

}
