package com.csform.android.uiapptemplate;

import com.csform.android.uiapptemplate.view.FloatLabeledEditText;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

public class LogInPageActivity extends Activity implements OnClickListener {

	public static final String LOGIN_PAGE_AND_LOADERS_CATEGORY = "com.csform.android.uiapptemplate.LogInPageAndLoadersActivity";
	public static final String DARK = "Dark";
	public static final String LIGHT = "Light";

	private com.csform.android.uiapptemplate.view.FloatLabeledEditText phone;
	private com.csform.android.uiapptemplate.view.FloatLabeledEditText password;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		getWindow().requestFeature(Window.FEATURE_NO_TITLE); //Removing ActionBar
		progressBarMapFragmentDetail = (ProgressBar) v
				.findViewById(R.id.progressBarMapFragmentDetail);
		String category = LIGHT;
		Bundle extras = getIntent().getExtras();
		if (extras != null && extras.containsKey(LOGIN_PAGE_AND_LOADERS_CATEGORY)) {
			category = extras.getString(LOGIN_PAGE_AND_LOADERS_CATEGORY, LIGHT);
		}
		setContentView(category);
	}
	
	private void setContentView(String category) {
		if (category.equals(DARK)) {
			setContentView(R.layout.activity_login_page_dark);
		} else if (category.equals(LIGHT)) {
			setContentView(R.layout.activity_login_page_light);
		}
		
		
		TextView login, register, skip;
		phone=(FloatLabeledEditText) findViewById(R.id.editTextLoginPhone);
		password=(FloatLabeledEditText) findViewById(R.id.editTextLoginPassword);
		login = (TextView) findViewById(R.id.login);
		register = (TextView) findViewById(R.id.register);
		skip = (TextView) findViewById(R.id.skip);
		login.setOnClickListener(this);
		register.setOnClickListener(this);
		skip.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		/*if (v instanceof TextView) {
			TextView tv = (TextView) v;
			Toast.makeText(this, tv.getText(), Toast.LENGTH_SHORT).show();
		}*/
		if(v.getId()==R.id.login)
		{
		    String stringPhone=phone.getText().toString();
		    String stringPassword=password.getText().toString();
		    
			login(stringPhone,stringPassword);
		}
		if(v.getId()==R.id.register)
		{
			startActivity(new Intent(getApplicationContext(), Registration.class));
		}
		if(v.getId()==R.id.skip)
		{
			startActivity(new Intent(getApplicationContext(), LeftMenusActivity.class));
			finish();
		}
	}

	private void login(String stringPhone, String stringPassword) {
		// TODO Auto-generated method stub
		new AsyncTask<Void, Long, Boolean>() {

			Boolean status;
			String url;

			protected void onPreExecute() {

				url = getResources().getString(R.string.URL_ShowItem);

				progressBarMapFragmentDetail.setVisibility(View.VISIBLE);
			};

			protected void onPostExecute(Boolean result) {
				progressBarMapFragmentDetail.setVisibility(View.INVISIBLE);
				DatabaseOperations dop = new DatabaseOperations(getActivity());
				for (int i = 0; i < mylist.size(); i++) {
					String id = mylist.get(i).get("id");
					String identifier = mylist.get(i).get("identifier");
					String title = mylist.get(i).get("title");
					String description = mylist.get(i).get("description");
					String type_name = mylist.get(i).get("type_name");
					String address = mylist.get(i).get("address");
					double lat = Double.parseDouble(mylist.get(i).get("lat"));
					double lng = Double.parseDouble(mylist.get(i).get("lng"));
					String image0 = mylist.get(i).get("image0");
					String image1 = mylist.get(i).get("image1");
					String image2 = mylist.get(i).get("image2");
					String user_login = mylist.get(i).get("user_login");
					String date_occured = mylist.get(i).get("date_occured");

					LatLng latlng = new LatLng(Double.parseDouble(mylist.get(i)
							.get("lat")), Double.parseDouble(mylist.get(i).get(
							"lng")));
					mMap.addMarker(new MarkerOptions()
							.position(latlng)
							.title(mylist.get(i).get("title"))
							.snippet(
									mylist.get(i).get("description") + " "
											+ mylist.get(i).get("date_occured")));
					try {
						dop.putInformation(dop, id, identifier, title,
								description, type_name, address, lat, lng,
								image0, image1, image2, user_login,
								date_occured);
					} catch (Exception ex) {
						ex.printStackTrace();
					} finally {
						dop.close();
					}
					// .setSnippet(CR.getString(3)

				}

			};

			@Override
			protected Boolean doInBackground(Void... added_item) {
				// TODO Auto-generated method stub
				status = retrieveData(url, a, b, c, d);
				return status;
			}

		}.execute(null, null, null);


	}
}
